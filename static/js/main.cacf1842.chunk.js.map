{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","changeTitle","goods","length","reduce","title","good","index","this","className","type","onClick","setState","map","classNames","includes","filter","g","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2QAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,YAAc,SAACC,GACb,OAAqB,IAAjBA,EAAMC,OACD,oBAGY,IAAjBD,EAAMC,OACF,GAAN,OAAUD,EAAM,GAAhB,gBAGKA,EAAME,QAAO,SAACC,EAAeC,EAAcC,GAChD,OAAIA,IAAUL,EAAMC,OAAS,EACrB,GAAN,OAAUE,EAAV,gBAAuBC,EAAvB,iBAGEC,IAAUL,EAAMC,OAAS,EACrB,GAAN,OAAUE,EAAV,YAAmBC,GAGf,GAAN,OAAUD,EAAV,YAAmBC,EAAnB,OACC,K,4CAGL,WAAU,IAAD,OACCN,EAAkBQ,KAAKT,MAAvBC,cAER,OACE,sBAAKS,UAAU,MAAf,UACE,qBAAIA,UAAU,QAAd,UACGD,KAAKP,YAAYD,GACjBA,EAAcG,OAAS,GACtB,wBACEM,UAAU,gDAOVC,KAAK,SACLC,QAAS,kBACP,EAAKC,SAAS,CAAEZ,cAAe,MAVnC,kBAkBJ,6BACGH,EAAgBgB,KAAI,SAAAP,GAAI,OACvB,qBAEEG,UAAWK,IAAW,OAAQ,MAAO,CACnC,yBAA0Bd,EAAce,SAAST,KAHrD,UAMGA,EACAN,EAAce,SAAST,GAEpB,wBACEG,UAAU,2CAMVC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CACZZ,cAAeA,EAAcgB,QAAO,SAAAC,GAAC,OAAIA,IAAMX,QAVrD,oBAkBA,wBACEG,UAAU,4CAMVC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CACZZ,cAAc,GAAD,mBAAMA,GAAN,CAAqBM,OAVxC,mBA1BCA,e,GAxDDY,IAAMC,WA2GTrB,IC9HfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cacf1842.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  changeTitle = (goods: string[]) => {\n    if (goods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (goods.length === 1) {\n      return `${goods[0]} is selected`;\n    }\n\n    return goods.reduce((title: string, good: string, index: number) => {\n      if (index === goods.length - 1) {\n        return `${title} and ${good} are selected`;\n      }\n\n      if (index === goods.length - 2) {\n        return `${title} ${good}`;\n      }\n\n      return `${title} ${good},`;\n    }, '');\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          {this.changeTitle(selectedGoods)}\n          {selectedGoods.length > 0 && (\n            <button\n              className=\"\n                button\n                is-danger\n                is-light\n                is-small\n                ml-3\n                mt-1\"\n              type=\"button\"\n              onClick={() => (\n                this.setState({ selectedGoods: [] })\n              )}\n            >\n              X\n            </button>\n          )}\n        </h1>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames('mb-4', 'p-2', {\n                'has-background-warning': selectedGoods.includes(good),\n              })}\n            >\n              {good}\n              {selectedGoods.includes(good)\n                ? (\n                  <button\n                    className=\"\n                      button\n                      is-danger\n                      is-light\n                      is-small\n                      ml-3\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.setState({\n                        selectedGoods: selectedGoods.filter(g => g !== good),\n                      });\n                    }}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    className=\"\n                      button\n                      is-success\n                      is-light\n                      is-small\n                      ml-3\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.setState({\n                        selectedGoods: [...selectedGoods, good],\n                      });\n                    }}\n                  >\n                    Add\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}